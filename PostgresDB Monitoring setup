Step-by-Step: Set Up PostgreSQL for Petclinic
ðŸ”¹ 1. Install PostgreSQL Locally
Depending on your OS:
On Ubuntu/Debian:
sudo apt update
sudo apt install postgresql postgresql-contrib

ðŸ”¹ 2. Create a Database and User
Once PostgreSQL is running:
psql -U postgres

Then run:
CREATE DATABASE petclinic;
CREATE USER petclinic WITH ENCRYPTED PASSWORD 'petclinic';
GRANT ALL PRIVILEGES ON DATABASE petclinic TO petclinic;


ðŸ”¹ 3. Switch Petclinic to PostgreSQL Profile
Run the app with the PostgreSQL profile:
./mvnw spring-boot:run -Dspring-boot.run.profiles=postgres

Or if using the JAR:
java -jar target/spring-petclinic.jar --spring.profiles.active=postgres

This tells Spring Boot to use application-postgres.properties for configuration.

ðŸ”¹ 4. Verify Configuration File
In application-postgres.properties, ensure the following settings: /myproject/spring-petclinic/src/main/resources/application-postgres.properties
spring.datasource.url=jdbc:postgresql://localhost:5432/petclinic
spring.datasource.username=petclinic
spring.datasource.password=petclinic
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

export POSTGRES_URL=jdbc:postgresql://localhost:5432/petclinic
export POSTGRES_USER=petclinic
export POSTGRES_PASS=petclinic


ðŸ”¹ 5. Run and Verify
Start the app and visit http://localhost:8080. Your data will now persist in PostgreSQL instead of resetting on each restart like H2.

For a deeper walkthrough, check out this guide on adding PostgreSQL to your Spring Boot project.
Would you like help containerizing PostgreSQL with Docker or integrating it with Datadog now?


================================================
Step-by-Step: Set Up MySQL for Petclinic
ðŸ”¹ 1. Install MySQL Locally
On Ubuntu/Debian:
sudo apt update
sudo apt install mysql-server
sudo systemctl start mysql


On macOS (with Homebrew):
brew install mysql
brew services start mysql


On Windows:
Download and install from MySQL official site.

ðŸ”¹ 2. Create Database and User
Log into MySQL:
mysql -u root -p


Then run:
CREATE DATABASE petclinic;
CREATE USER 'petclinic'@'localhost' IDENTIFIED BY 'petclinic';
GRANT ALL PRIVILEGES ON petclinic.* TO 'petclinic'@'localhost';
FLUSH PRIVILEGES;



ðŸ”¹ 3. Switch Petclinic to MySQL Profile
Run the app with the MySQL profile:
./mvnw spring-boot:run -Dspring-boot.run.profiles=mysql


Or:
java -jar target/spring-petclinic.jar --spring.profiles.active=mysql


This tells Spring Boot to use application-mysql.properties.

ðŸ”¹ 4. Verify Configuration File
Ensure application-mysql.properties contains:
spring.datasource.url=jdbc:mysql://localhost:3306/petclinic
spring.datasource.username=petclinic
spring.datasource.password=petclinic
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.sql.init.mode=always


You may need to add the MySQL JDBC driver to your pom.xml:
<dependency>
  <groupId>mysql</groupId>
  <artifactId>mysql-connector-java</artifactId>
  <scope>runtime</scope>
</dependency>



ðŸ”¹ 5. Optional: Use Docker Instead
If you prefer Docker, Petclinic provides a docker-compose.yml that includes MySQL:
docker-compose up


This will spin up MySQL and other services automatically.

ðŸ”¹ 6. Verify the App
Visit http://localhost:8080 and confirm that data persists across restarts.


