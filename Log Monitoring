Send logs to datadog via telnet

you can send logs to Datadog via Telnet, though it's a bit unconventional and mostly used for testing or educational purposes. Datadog supports log ingestion over TCP port 10514, which allows you to push raw log data directly to their intake endpoint.

https://docs.datadoghq.com/api/latest/logs/?site=us5

curl -X POST "https://http-intake.logs.us5.datadoghq.com/api/v2/logs" \
  -H "Content-Type: application/json" \
  -H "DD-API-KEY: <your_api_key>" \
  -d '[{"message": "Hi this is my test logs for datadog log mpnitoring", "ddsource": "springboot", "service": "petclinic-app"}]'

inject logs from server file/custom file

logs_enabled: true

create config file at 
/etc/datadog-agent/conf.d/linux_audit_logs.d/conf.yaml

logs:
  - type: file
    path: /var/log/audit/audit.log
    service: linux-audit
    source: auditd
    tags:
      - env:prod
      - team:security

sudo systemctl restart datadog-agent

datadog-agent status


add log file for petclinic

/etc/datadog-agent/conf.d/petclinic.d/petclinic.yaml

logs:
  - type: file
    path: /myproject/spring-petclinic/log/petclinic.log
    service: petclinic-test
    source: petclinic
    tags:
      - env:prod
      - team:apps
sudo systemctl restart datadog-agent

datadog-agent status

go to https://us5.datadoghq.com/logs/onboarding/server?source=java

Create a file java.d/conf.yaml in the Agent‚Äôs conf.d/ directory with the following content:

logs:
  - type: file
    path: /path/to/your/java/log.log
    service: myapplication
    source: java
    sourcecategory: sourcecode

==============================
Mask Passwords in Datadog Logs
==============================
‚úÖ 1. Enable Sensitive Data Scanner
- Go to Datadog Console > Logs > Sensitive Data Scanner
- Click ‚ÄúAdd scanning group‚Äù
‚úÖ 2. Create a Scanning Rule
- Choose from Datadog‚Äôs rule library or create a custom regex
- Example custom rule to detect password fields:
(?i)(password|passwd|pwd)[\s"':=]+[^,\s"']+

- This matches variations like:
- password=123456
- "passwd": "secret"
- pwd: hunter2

‚úÖ 3. Choose Action: Redact or Hash
- Redact: Replaces the value with ***
- Hash: Obscures the value using a one-way hash

‚úÖ 4. Apply to Specific Logs- Scope the rule to logs from a particular service, source, or tag (e.g., source:springboot or service:petclinic-app)
‚úÖ 5. Save and Monitor- Once saved, Datadog will automatically scan incoming logs and apply the masking in real time.
üîç Example Before & AfterBefore:{
  "username": "admin",
  "password": "supersecret"
}
After (Redacted):{
  "username": "admin",
  "password": "***"
}
